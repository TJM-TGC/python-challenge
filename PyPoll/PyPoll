{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'Desktop/1 Github/Repos/python-challenge/PyPoll/Resources/02-Homework_03-Python_Instructions_PyPoll_Resources_election_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-8-8e78f25277d6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mpoll_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpoll_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnewline\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcsv_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m     \u001b[0mcsv_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcsv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcsvfile\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelimiter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\",\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'Desktop/1 Github/Repos/python-challenge/PyPoll/Resources/02-Homework_03-Python_Instructions_PyPoll_Resources_election_data.csv'"
     ]
    }
   ],
   "source": [
    "# Import \n",
    "\n",
    "import os\n",
    "import csv\n",
    "\n",
    "# Open & Read CSV\n",
    "\n",
    "data_file = \"Desktop/1 Github/Repos/python-challenge/PyPoll/Resources/02-Homework_03-Python_Instructions_PyPoll_Resources_election_data.csv\"\n",
    "poll_data = os.path.join(data_file)\n",
    "\n",
    "with open(poll_data, newline=\"\", encoding=\"utf-8\") as csv_file:\n",
    "    csv_reader = csv.reader(csvfile, delimiter=\",\")\n",
    "\n",
    "# Count Voters\n",
    "\n",
    "    next(csvreader)\n",
    "    data = list(csvreader)\n",
    "    row_count = len(data)\n",
    "\n",
    "# Candidates & Vote Tallies\n",
    "\n",
    "    candidate_name = list()\n",
    "    tally = list()\n",
    "    for i in range (0,row_count):\n",
    "        candidate = data[i][2]\n",
    "        tally.append(candidate)\n",
    "        if candidate not in candilist: \n",
    "            candidate_list.append(candidate)\n",
    "    candidate_count = len(candidate_list)\n",
    "\n",
    "# The total number of votes each candidate won & the percentage of votes each candidate won\n",
    "\n",
    "    votes = list()\n",
    "    percentage = list()\n",
    "    for j in range (0,candidate_count):\n",
    "        name = candidate_list[j]\n",
    "        votes.append(tally.count(name))\n",
    "        vprct = votes[j]/row_count\n",
    "        percentage.append(vprct)\n",
    "\n",
    "# Highest Number of Votes\n",
    "\n",
    "    winner = votes.index(max(votes))    \n",
    "    \n",
    "    \n",
    "\n",
    "# Print Text Files \n",
    "\n",
    "    print(\"Election Results\")\n",
    "    print(\"----------------------------\")\n",
    "    print(f\"Total Votes: {row_count:,}\")\n",
    "    print(\"----------------------------\")\n",
    "    for k in range (0,candidate_count): \n",
    "        print(f\"{candidate_list[k]}: {percentage[k]:.3%} ({votes[k]:,})\")\n",
    "    print(\"----------------------------\")\n",
    "    print(f\"Winner: {candidate_list[winner]}\")\n",
    "    print(\"----------------------------\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
